<?php
/**
 * @package		Joomla.Site
 * @subpackage	com_users
 * @copyright	Copyright (C) 2005 - 2013 Open Source Matters, Inc. All rights reserved.
 * @license		GNU General Public License version 2 or later; see LICENSE.txt
 */

defined('_JEXEC') or die;

/**
 * Profile view class for Users.
 *
 * @package		Joomla.Site
 * @subpackage	com_users
 * @since		1.6
 */
class UsersViewProfile extends JViewLegacy
{
	protected $data;
	protected $form;
	protected $params;
	protected $state;

	/**
	 * Method to display the view.
	 *
	 * @param	string	$tpl	The template file to include
	 * @since	1.6
	 */
	public function display($tpl = null)
	{
		// Get the view data.
		$this->data		= $this->get('Data');
		$this->form		= $this->get('Form');
		$this->state	= $this->get('State');
		$this->params	= $this->state->get('params');

		// Check for errors.
		if (count($errors = $this->get('Errors'))) {
			JError::raiseError(500, implode('<br />', $errors));
			return false;
		}

		// Check if a user was found.
		if (!$this->data->id) {
			JError::raiseError(404, JText::_('JERROR_USERS_PROFILE_NOT_FOUND'));
			return false;
		}

		// Check for layout override
		$active = JFactory::getApplication()->getMenu()->getActive();
		if (isset($active->query['layout'])) {
			$this->setLayout($active->query['layout']);
		}

		$this->user2 = JFactory::getUser();
		
		$this->user = ideary::getUserInfoById($this->user2->id);


		$resultEN = strpos($this->user->params,'en-GB');
		$resultES = strpos($this->user->params,'es-ES');
		$resultPT = strpos($this->user->params,'pt-BR');

		$userextra = Ideary::getExtraUserData($_GET["id"]);
		
		if ($resultEN!=false && $resultEN!=null){
			$currentlang ='en-GB';
		}elseif ($resultES!=false && $resultES!=null){
			$currentlang ='es-ES';
		}elseif ($resultPT!=false && $resultPT!=null){
			$currentlang ='pt-BR';
		}
		
		$this->assignRef('userextra', $userextra);
		$this->assignRef('currentlang', $currentlang);
		
		
		$this->userDatafinal = Ideary::getuserData($this->user->id);
		$this->userDatafinal = $this->userDatafinal[0];
		$this->userExtraData = Ideary::getExtraUserData($this->user->id);
		$this->cant_pub = Ideary::getUserCantTexts($this->user->id,1);
		$this->cant_draft = Ideary::getUserCantTexts($this->user->id,0);
		
		if ($_GET["layout"]=="edit"){
			$this->categories = Ideary::getCategories();
			$this->user_interests = Ideary::getUserInterests($this->user->id);
		}
		
		if ($_GET["layout"]=="userconfiguration"){
			$this->UserNotifSettings = Ideary::getUserNotifSettings($this->user->id);
			if (count($this->UserNotifSettings)>0){
				$this->UserNotifSettings = $this->UserNotifSettings[0];
			}
		}

        $pub = ($_GET['draft']==1)? 0 : 1;
		$texts = ideary::getTextsByUserId($this->user->id, $this->user->id, $pub);

        $this->assignRef('texts', $texts);
		
		
		//Escape strings for HTML output
		$this->pageclass_sfx = htmlspecialchars($this->params->get('pageclass_sfx'));
		$this->prepareDocument();

		parent::display($tpl);
	}

	/**
	 * Prepares the document
	 *
	 * @since	1.6
	 */
	protected function prepareDocument()
	{
		$app		= JFactory::getApplication();
		$menus		= $app->getMenu();
		$user		= JFactory::getUser();
		$login		= $user->get('guest') ? true : false;
		$title 		= null;

		// Because the application sets a default page title,
		// we need to get it from the menu item itself
		$menu = $menus->getActive();
		if($menu) {
			$this->params->def('page_heading', $this->params->get('page_title', $user->name));
		} else {
			$this->params->def('page_heading', JText::_('COM_USERS_PROFILE'));
		}

		//$title = $this->params->get('page_title', '');
		//if (empty($title)) {
			$title = $user->name;
		//}
		/*elseif ($app->getCfg('sitename_pagetitles', 0) == 1) {
			$title = JText::sprintf('JPAGETITLE', $app->getCfg('sitename'), $title);
		}
		elseif ($app->getCfg('sitename_pagetitles', 0) == 2) {
			$title = JText::sprintf('JPAGETITLE', $title, $app->getCfg('sitename'));
		}*/
		$this->document->setTitle(ucwords($title));

		if ($this->params->get('menu-meta_description'))
		{
			$this->document->setDescription($this->params->get('menu-meta_description'));
		}

		if ($this->params->get('menu-meta_keywords'))
		{
			$this->document->setMetadata('keywords', $this->params->get('menu-meta_keywords'));
		}

		if ($this->params->get('robots'))
		{
			$this->document->setMetadata('robots', $this->params->get('robots'));
		}
	}
}
